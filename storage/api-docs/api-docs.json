{
    "openapi": "3.0.0",
    "info": {
        "title": "Kutubxona",
        "description": "BLOCK jamoasi",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/get-student": {
            "get": {
                "tags": [
                    "Admin API"
                ],
                "description": "Retrieve all Student",
                "operationId": "83d588eb192c41015307fd6e9426b3b6",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "login User By email",
                "description": "Email orqali tizimga kirish",
                "operationId": "e2848c29fa6cbb9bb1f826c155284551",
                "requestBody": {
                    "description": "Pass User credentials",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/api/login/phone": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "login User By Phone",
                "description": "Telefon reqam orqali tizimga kirish",
                "operationId": "f27cc96c0044d8d39e1b7e060b65c59b",
                "requestBody": {
                    "description": "Pass User credentials",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "password"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "integer",
                                        "format": "number",
                                        "example": "998901234567"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/v1/api/logout": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "Post a new data",
                "description": "Logout User",
                "operationId": "ff18d67314ff937d12bb8a187d78f4c9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/v1/api/register": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "Post a new data",
                "description": "Register User ",
                "operationId": "ff8a4a0a1fcd94e893c6602185f49ad0",
                "requestBody": {
                    "description": "User data  credentials",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "surname",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "User"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Surname"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/refresh": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "Post a new data",
                "description": "Logout User ",
                "operationId": "f189259787c5ae85ac996c1f485b4f50",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/api/v1/resend-code": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "Verification",
                "description": "Resend activation code",
                "operationId": "resend-activate-code",
                "requestBody": {
                    "description": "Resend",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "azimxalilov5443@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "{name,surname . . .}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/activate-user": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "Verification",
                "description": "Ro'yxatdan o'tgandan so'ng userni aktiv qilish",
                "operationId": "active_user",
                "requestBody": {
                    "description": "Verify",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "verify_code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "azimxalilov5443@gmail.com"
                                    },
                                    "verify_code": {
                                        "type": "integer",
                                        "format": "number",
                                        "example": 123456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SUCCESS"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/revoke-password": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "revoke Password",
                "description": "Parolni esdan chiqardi tizimga kirish uchun yangi parol so'rash",
                "operationId": "revoke_password",
                "requestBody": {
                    "description": "Reset Password",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "azimxalilov5443@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "{name,surname . . .}"
                                        },
                                        "authorization": {
                                            "type": "string",
                                            "example": "{token,type}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/check-verify-code": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "revoke Password",
                "description": "Activatsiya kodi to'g'riligini tekshirish",
                "operationId": "check_verify_code",
                "requestBody": {
                    "description": "Check code",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "verify_code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "azimxalilov5443@gmail.com"
                                    },
                                    "verify_code": {
                                        "type": "integer",
                                        "format": "number",
                                        "example": 123456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "{name,surname . . .}"
                                        },
                                        "authorization": {
                                            "type": "string",
                                            "example": "{token,type}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reset-password-verify": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "reset Password Verify",
                "description": "Tizimga kirish uchun tasdiqlash parolini to'g'ri yozgan bulsa endi yangi parol kiritish",
                "operationId": "reset_password_verify",
                "requestBody": {
                    "description": "Reset Password",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "verify_code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "azimxalilov5443@gmail.com"
                                    },
                                    "verify_code": {
                                        "type": "integer",
                                        "format": "number",
                                        "example": 123456
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "admin123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "{name,surname . . .}"
                                        },
                                        "authorization": {
                                            "type": "string",
                                            "example": "{token,type}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/change-password": {
            "post": {
                "tags": [
                    "01.Auth User"
                ],
                "summary": "Change Password",
                "description": "Change Password",
                "operationId": "2d907f730e08a08dd77982ca4fb573f8",
                "requestBody": {
                    "description": "Login page",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "example": "admin@gmail.com"
                                        },
                                        "password": {
                                            "type": "string",
                                            "example": "admin123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "User": []
                    }
                ]
            }
        },
        "/api/v1/book": {
            "get": {
                "tags": [
                    "Book API CRUD"
                ],
                "summary": "Get all Books",
                "description": "Retrieve all Books",
                "operationId": "book_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Book API CRUD"
                ],
                "summary": "Create a new Book",
                "description": "Add a new Book",
                "operationId": "book_store",
                "requestBody": {
                    "description": "Book save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/book/{id}": {
            "get": {
                "tags": [
                    "Book API CRUD"
                ],
                "summary": "Get a single Book by ID",
                "description": "Retrieve a single Book by its ID",
                "operationId": "book_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Book to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Book API CRUD"
                ],
                "summary": "Update a Book by ID",
                "description": "Update a specific Book by its ID",
                "operationId": "book_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Book to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Book save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Book API CRUD"
                ],
                "summary": "Delete a Book by ID",
                "description": "Remove a specific Book by its ID",
                "operationId": "book_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Book to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/department": {
            "get": {
                "tags": [
                    "Department API CRUD"
                ],
                "summary": "Get all Departments",
                "description": "Retrieve all Departments",
                "operationId": "department_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Department API CRUD"
                ],
                "summary": "Create a new Department",
                "description": "Add a new Department",
                "operationId": "department_store",
                "requestBody": {
                    "description": "Department save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "description",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "image": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/department/{id}": {
            "get": {
                "tags": [
                    "Department API CRUD"
                ],
                "summary": "Get a single Department by ID",
                "description": "Retrieve a single Department by its ID",
                "operationId": "department_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Department to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Department API CRUD"
                ],
                "summary": "Update a Department by ID",
                "description": "Update a specific Department by its ID",
                "operationId": "department_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Department to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Department save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "description",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "image": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Department API CRUD"
                ],
                "summary": "Delete a Department by ID",
                "description": "Remove a specific Department by its ID",
                "operationId": "department_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Department to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/get-book": {
            "get": {
                "tags": [
                    "Student API"
                ],
                "description": "Retrieve all Student",
                "operationId": "dbc91c050db14d7078b6ae410649f344",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/get-book/{id}": {
            "get": {
                "tags": [
                    "Student API"
                ],
                "summary": "Get a single Book by ID",
                "description": "Retrieve a single Book by its ID",
                "operationId": "4e1618d3cc65ddee29072ee79d4212ee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Book to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/read-book": {
            "get": {
                "tags": [
                    "Student API"
                ],
                "description": "Retrieve all Student",
                "operationId": "49c0a864690e0755c5d71babd45b9eba",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/existing-book": {
            "get": {
                "tags": [
                    "Student API"
                ],
                "description": "Retrieve all Student",
                "operationId": "5753fc99fe5147db941e032971bb2d2f",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/rent_book": {
            "get": {
                "tags": [
                    "RentBook API CRUD"
                ],
                "summary": "Get all RentBooks",
                "description": "Retrieve all RentBooks",
                "operationId": "rent_book_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RentBook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "RentBook API CRUD"
                ],
                "summary": "Create a new RentBook",
                "description": "Add a new RentBook",
                "operationId": "rent_book_store",
                "requestBody": {
                    "description": "RentBook save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "book_id",
                                    "star_time",
                                    "end_time",
                                    "is_taken"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "book_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "star_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": ""
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": ""
                                    },
                                    "is_taken": {
                                        "type": "boolean",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RentBook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/rent_book/{id}": {
            "get": {
                "tags": [
                    "RentBook API CRUD"
                ],
                "summary": "Get a single RentBook by ID",
                "description": "Retrieve a single RentBook by its ID",
                "operationId": "rent_book_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RentBook to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RentBook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "RentBook API CRUD"
                ],
                "summary": "Update a RentBook by ID",
                "description": "Update a specific RentBook by its ID",
                "operationId": "rent_book_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RentBook to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "RentBook save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "book_id",
                                    "star_time",
                                    "end_time",
                                    "is_taken"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "book_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "star_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": ""
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": ""
                                    },
                                    "is_taken": {
                                        "type": "boolean",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RentBook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "RentBook API CRUD"
                ],
                "summary": "Delete a RentBook by ID",
                "description": "Remove a specific RentBook by its ID",
                "operationId": "rent_book_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RentBook to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RentBook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/subject": {
            "get": {
                "tags": [
                    "Subject API CRUD"
                ],
                "summary": "Get all Subjects",
                "description": "Retrieve all Subjects",
                "operationId": "subject_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subject API CRUD"
                ],
                "summary": "Create a new Subject",
                "description": "Add a new Subject",
                "operationId": "subject_store",
                "requestBody": {
                    "description": "Subject save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "department_id",
                                    "name",
                                    "tag",
                                    "position",
                                    "description"
                                ],
                                "properties": {
                                    "department_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "tag": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/subject/{id}": {
            "get": {
                "tags": [
                    "Subject API CRUD"
                ],
                "summary": "Get a single Subject by ID",
                "description": "Retrieve a single Subject by its ID",
                "operationId": "subject_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Subject to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subject API CRUD"
                ],
                "summary": "Update a Subject by ID",
                "description": "Update a specific Subject by its ID",
                "operationId": "subject_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Subject to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Subject save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "department_id",
                                    "name",
                                    "tag",
                                    "position",
                                    "description"
                                ],
                                "properties": {
                                    "department_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "tag": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subject API CRUD"
                ],
                "summary": "Delete a Subject by ID",
                "description": "Remove a specific Subject by its ID",
                "operationId": "subject_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Subject to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "User API CRUD"
                ],
                "summary": "Get all Users",
                "description": "Retrieve all Users",
                "operationId": "user_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User API CRUD"
                ],
                "summary": "Create a new User",
                "description": "Add a new User",
                "operationId": "user_store",
                "requestBody": {
                    "description": "User save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "surname",
                                    "email",
                                    "password",
                                    "image",
                                    "group",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "image": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "qr_code": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "group": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "tags": [
                    "User API CRUD"
                ],
                "summary": "Get a single User by ID",
                "description": "Retrieve a single User by its ID",
                "operationId": "user_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the User to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User API CRUD"
                ],
                "summary": "Update a User by ID",
                "description": "Update a specific User by its ID",
                "operationId": "user_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the User to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "surname",
                                    "email",
                                    "password",
                                    "image",
                                    "group",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "image": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "qr_code": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "group": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User API CRUD"
                ],
                "summary": "Delete a User by ID",
                "description": "Remove a specific User by its ID",
                "operationId": "user_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the User to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "title": "Book title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Department": {
                "title": "Department title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "image": {
                                    "type": "file"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "phone": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "RentBook": {
                "title": "RentBook title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "user_id": {
                                    "type": "integer"
                                },
                                "book_id": {
                                    "type": "integer"
                                },
                                "star_time": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "end_time": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "is_taken": {
                                    "type": "boolean"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Subject": {
                "title": "Subject title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "department_id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "tag": {
                                    "type": "string"
                                },
                                "position": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "surname": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "image": {
                                    "type": "file"
                                },
                                "qr_code": {
                                    "type": "string"
                                },
                                "group": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Error": {
                "title": "ResponseError",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Not found"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    },
                    "code": {
                        "type": "integer",
                        "example": 404
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "api": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}